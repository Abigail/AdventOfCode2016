#!/opt/perl/bin/perl

use 5.010;

use strict;
use warnings;
no  warnings 'syntax';

use feature  'signatures';
no  warnings 'experimental::signatures';

#
# Part 1:
#
# While snooping around the local network of EBHQ, you compile a list
# of IP addresses (they're IPv7, of course; IPv6 is much too limited).
# You'd like to figure out which IPs support TLS (transport-layer
# snooping).
# 
# An IP supports TLS if it has an Autonomous Bridge Bypass Annotation,
# or ABBA. An ABBA is any four-character sequence which consists of
# a pair of two different characters followed by the reverse of that
# pair, such as xyyx or abba. However, the IP also must not have an
# ABBA within any hypernet sequences, which are contained by square
# brackets.
#
# How many IPs in your puzzle input support TLS?
#
#
# Part 2:
#
# You would also like to know which IPs support SSL (super-secret
# listening).
# 
# An IP supports SSL if it has an Area-Broadcast Accessor, or ABA,
# anywhere in the supernet sequences (outside any square bracketed
# sections), and a corresponding Byte Allocation Block, or BAB,
# anywhere in the hypernet sequences. An ABA is any three-character
# sequence which consists of the same character twice with a different
# character between them, such as xyx or aba. A corresponding BAB is
# the same characters but in reversed positions: yxy and bab,
# respectively.
# 
# How many IPs in your puzzle input support SSL?
#

@ARGV     = "input" unless @ARGV;
my @input = <ARGV>;

sub has_abba ($string) {
    $string =~ /(.)(?!\g{1})(.)\g{2}\g{1}/;
}

my $tls_ok = 0;
my $sls_ok = 0;

foreach my $line (@input) {
    chomp $line;
    my @chunks  = $line =~ /[a-z]+/g;
    my $inside  = join " " => do {my $i = 0; grep {$i ++ % 2} @chunks};
    my $outside = join " " => do {my $i = 1; grep {$i ++ % 2} @chunks};

    #
    # For TLS, we must have ABBA on an outside block, 
    # and no ABBA on an inside block
    #
    $tls_ok ++ if has_abba ($outside) && !has_abba ($inside);

    #
    # For SLS, there must be an ABA in an outside block, with
    # a corresponding BAB in an inside block.
    #
    $sls_ok ++ if
       "$outside-$inside" =~ /(.)(?!\g{1})(.)\g{1}.*-.*\g{2}\g{1}\g{2}/;
}

say "Solution1: $tls_ok";
say "Solution2: $sls_ok";

__END__
